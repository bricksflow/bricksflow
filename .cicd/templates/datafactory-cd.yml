parameters:
  - name: "serviceConnectionName"
    type: "string"
  - name: "environmentName"
    type: "string"

## DEPLOY
jobs:
  - deployment: DeployDataFactory
    displayName: Deploy Data Factory
    environment: ${{ parameters.environmentName }}
    pool:
      vmImage: 'ubuntu-20.04'
    workspace:
      clean: all
    strategy:
      runOnce:
        deploy:
          steps:
            # checkout current repository
            - checkout: self

            # install azure.datafactory.tools module
            - task: PowerShell@2
              displayName: 'Install module azure.datafactory.tools'
              inputs:
                failOnStderr: true
                targetType: inline
                script: |
                  Install-Module Az.DataFactory -MinimumVersion "1.10.0" -Force
                  Install-Module -Name "azure.datafactory.tools" -Force
                  Import-Module -Name "azure.datafactory.tools" -Force

            # deploy data factory
            - task: AzurePowerShell@4
              name: deployDataFactory
              displayName: 'Deploy Data Factory'
              inputs:
                azureSubscription: ${{ parameters.serviceConnectionName }}
                failOnStandardError: true
                azurePowerShellVersion: latestVersion
                scriptType: inlineScript
                inline: |
                  $Env:ENV = "${{ parameters.environmentName }}"
                  $Env:GIT_BRANCH = "$(CURRENT_BRANCH)"
                  $Env:DBX_URL = "https://" + $(Get-AzDatabricksWorkspace -ResourceGroupName "$(RESOURCE_GROUP_NAME)" -Name "$(DBX_WS_NAME)").Url

                  $options = New-AdfPublishOption
                  $options.CreateNewInstance = $true
                  $options.DeployGlobalParams = $true
                  $options.DeleteNotInSource = $true
                  $options.StopStartTriggers = $true

                  if ($Env:ENV -eq "test" ) {
                    $factoryName = "$(FACTORY_NAME)-$Env:GIT_BRANCH"
                  }
                  else {
                    $factoryName = "$(FACTORY_NAME)"
                  }

                  $factoryId = (Get-AzDataFactoryV2 -ResourceGroupName "$(RESOURCE_GROUP_NAME)" -Name $factoryName).DataFactoryId
                  Write-Host "##vso[task.setvariable variable=FACTORY_URL;isOutput=true]$factoryId"

                  Publish-AdfV2FromJson `
                    -RootFolder "datafactory" `
                    -ResourceGroupName "$(RESOURCE_GROUP_NAME)" `
                    -DataFactoryName "$factoryName" `
                    -Location "$(LOCATION)" `
                    -Stage "datafactory/deployment/config-${{ parameters.environmentName }}.json" `
                    -Option $options

                  Set-AzKeyVaultAccessPolicy `
                    -VaultName "$(KEYVAULT_NAME)" `
                    -ObjectId $((Get-AzDataFactoryV2 -ResourceGroupName "$(RESOURCE_GROUP_NAME)" -Name $factoryName).identity.PrincipalId.Guid) `
                    -PermissionsToSecrets Get,List

            - task: Bash@3
              displayName: 'Link to ADF'
              inputs:
                targetType: inline
                script: |
                  link="Link to deployed ADF: https://adf.azure.com/?factory=$(deployDataFactory.FACTORY_URL)"
                  echo "$link"